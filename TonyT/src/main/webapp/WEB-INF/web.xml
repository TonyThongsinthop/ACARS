<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>CrunchifySpringMVCTutorial</display-name>
  
  <!-- 1. This is where everything starts, you are setting default page to index.jsp
  This page will get displayed first! -->
  
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
   <!-- 2. Instantiate the Servlet object from class DispatherServlet -->
   <!-- Any name that you put in servlet-name parameter, Spring MVC will look for that name + "-servlet.xml" 
        e.g. this will call tonyt-servlet.xml -->
  
      <servlet>
        <servlet-name>tonyt</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <!-- 3. You need to tell servlet about what is the local URI address to look for
    http://stackoverflow.com/questions/16988689/spring-mvc-configure-url-pattern
    In this case, We are telling MVC to look for URI = /welcome
    Once you type http://localhost:8080/<project name>/welcome
    Spring MVC will map "/welcome" to controller class that has @RequestMapping("/welcome")
    Then it will pass the control to that controller class -->
    
    <servlet-mapping>
        <servlet-name>tonyt</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
  
</web-app>